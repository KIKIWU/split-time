{"version":3,"file":"split_time.js","sources":["es/entry-list.js","es/task-queue.js","es/utils.js","es/timing/paint.js","es/timing/largest-contentful-paint.js","es/observer.js","es/index.js"],"sourcesContent":["export default class EntryList extends Array {\n    constructor(entries) {\n        super(...entries);\n        this._entries = entries;\n    }\n    getEntries() {\n        return this._entries;\n    }\n    getEntriesByType(type) {\n        return this._entries.filter((e) => e.entryType === type);\n    }\n    getEntriesByName(name, type) {\n        return this._entries\n            .filter((e) => e.name === name)\n            .filter((e) => (type ? e.entryType === type : true));\n    }\n}\n//# sourceMappingURL=entry-list.js.map","import EntryList from './entry-list';\nconst INTERVAL = 100;\nclass TaskQueue {\n    constructor(registeredObservers, processedEntries) {\n        this.registeredObservers = registeredObservers || new Set();\n        this.processedEntries = processedEntries || new Set();\n        this.performanceEntries = new Set();\n        this.timerId = null;\n    }\n    add(observer) {\n        this.registeredObservers.add(observer);\n        if (this.registeredObservers.size === 1) {\n            this.observe();\n        }\n    }\n    remove(observer) {\n        this.registeredObservers.delete(observer);\n        if (!this.registeredObservers.size) {\n            this.disconnect();\n        }\n    }\n    disconnect() {\n        self.clearInterval(this.timerId);\n        this.timerId = null;\n    }\n    // call callbacks function when CPU idle\n    idleCallback() {\n    }\n    // Polling\n    observe() {\n        this.timerId = self.setInterval(this.processEntries.bind(this), INTERVAL);\n    }\n    processEntries() {\n        const entries = this.getNewEntries();\n        entries.forEach((entry) => {\n            const { entryType } = entry;\n            const observers = this.getObserversForType(this.registeredObservers, entryType);\n            // Add the entry to observer buffer\n            observers.forEach((observer) => {\n                observer.buffer.add(entry);\n            });\n            // Mark the entry as processed\n            this.processedEntries.add(entry);\n        });\n        // Queue task to process all observer buffers\n        // TODO: wait for CPU idle\n        const task = () => this.registeredObservers.forEach(this.processBuffer);\n        if ('requestAnimationFrame' in self) {\n            self.requestAnimationFrame(task);\n        }\n        else {\n            self.setTimeout(task, 0);\n        }\n    }\n    processBuffer(observer) {\n        // if use native observer, call callback function when native observers call\n        if (observer.useNative)\n            return;\n        const entries = Array.from(observer.buffer);\n        const entryList = new EntryList(entries);\n        observer.buffer.clear();\n        if (entries.length && observer.callback) {\n            observer.callback.call(undefined, entryList, observer);\n        }\n    }\n    getNewEntries() {\n        const entries = self.performance.getEntries();\n        const totalEntries = [...entries, ...this.performanceEntries];\n        return totalEntries.filter((entry) => !this.processedEntries.has(entry));\n    }\n    getObserversForType(observers, type) {\n        return Array.from(observers)\n            .filter((observer) => observer.unsupportedEntryTypes.some((t) => t === type));\n    }\n}\nexport default TaskQueue;\n//# sourceMappingURL=task-queue.js.map","export const ifSupported = 'PerformanceObserver' in self && typeof PerformanceObserver === 'function';\nexport const totalEntryTypes = [\n    'element',\n    'first-input',\n    'frame',\n    'largest-contentful-paint',\n    'layout-shift',\n    'longtask',\n    'mark',\n    'measure',\n    'navigation',\n    'paint',\n    'resource',\n    'server'\n];\n//# sourceMappingURL=utils.js.map","export const observe = () => {\n    const INTERVAL = 100;\n    let pollingTimerId = null;\n    return new Promise((resolve, reject) => {\n        pollingTimerId = self.setInterval(() => {\n            const { timing } = self.performance;\n            const { domContentLoadedEventStart, domContentLoadedEventEnd, navigationStart } = timing;\n            if (domContentLoadedEventStart && domContentLoadedEventEnd && navigationStart) {\n                self.clearInterval(pollingTimerId);\n                resolve([\n                    new PerformancePaintTiming('first-paint', domContentLoadedEventStart - navigationStart),\n                    new PerformancePaintTiming('first-contentful-paint', domContentLoadedEventEnd - navigationStart)\n                ]);\n            }\n        }, INTERVAL);\n    });\n};\nclass PerformancePaintTiming {\n    constructor(name, startTime) {\n        this.duration = 0;\n        this.entryType = 'paint';\n        this.name = name;\n        this.startTime = startTime;\n    }\n    toJSON() {\n        return JSON.stringify(this);\n    }\n}\nexport default PerformancePaintTiming;\n//# sourceMappingURL=paint.js.map","const MutationObserver = self.MutationObserver || self.WebKitMutationObserver;\nconst TAG_WEIGHT_MAP = {\n    SVG: 2,\n    IMG: 2,\n    CANVAS: 4,\n    OBJECT: 4,\n    EMBED: 4,\n    VIDEO: 4\n};\nconst WW = self.innerWidth;\nconst WH = self.innerHeight;\nfunction getStyle(element, att) {\n    return self.getComputedStyle(element)[att];\n}\nexport const observe = () => {\n    const endpoints = [];\n    const mp = {};\n    let options = {};\n    let LCPResolver = null;\n    let mutationCount = 0;\n    let scheduleTimerTasks = false;\n    let isChecking = false;\n    let timerId = null;\n    const mutationObserver = new MutationObserver((mutations) => {\n        getSnapshot();\n    });\n    mutationObserver.observe(document, { childList: true, subtree: true });\n    function getSnapshot() {\n        const { navigationStart } = self.performance.timing;\n        const timestamp = Date.now() - navigationStart;\n        setMutationRecord(document, mutationCount++);\n        endpoints.push({ timestamp });\n    }\n    function setMutationRecord(target, mutationCount) {\n        const tagName = target.tagName;\n        const IGNORE_TAG_SET = new Set(['META', 'LINK', 'STYLE', 'SCRIPT', 'NOSCRIPT']);\n        if (!IGNORE_TAG_SET.has(tagName) && target.children) {\n            for (let child = target.children, i = target.children.length - 1; i >= 0; i--) {\n                if (child[i].getAttribute('mr_c') === null) {\n                    child[i].setAttribute('mr_c', mutationCount);\n                }\n                setMutationRecord(child[i], mutationCount);\n            }\n        }\n    }\n    function ifRipe(start) {\n        const LIMIT = 1000;\n        const ti = Date.now() - start;\n        return ti > LIMIT || ti - (endpoints[endpoints.length - 1].timestamp) > 1000;\n    }\n    function rescheduleTimer() {\n        const { navigationStart } = self.performance.timing;\n        const DELAY = 500;\n        if (!scheduleTimerTasks)\n            return;\n        if (!isChecking && ifRipe(navigationStart)) {\n            checkLCP();\n        }\n        else {\n            clearTimeout(timerId);\n            timerId = setTimeout(() => {\n                rescheduleTimer();\n            }, DELAY);\n        }\n    }\n    function checkLCP() {\n        isChecking = true;\n        let res = deepTraversal(document.body);\n        let tp;\n        res.dpss.forEach(item => {\n            if (tp && tp.st) {\n                if (tp.st < item.st) {\n                    tp = item;\n                }\n            }\n            else {\n                tp = item;\n            }\n        });\n        initResourceMap();\n        let resultSet = filterTheResultSet(tp.els);\n        let LCPOptions = calResult(resultSet);\n        LCPResolver([new LargestContentfulPaint(LCPOptions)]);\n        disable();\n    }\n    function deepTraversal(node) {\n        if (node) {\n            let dpss = [];\n            for (let i = 0, child; (child = node.children[i]); i++) {\n                let s = deepTraversal(child);\n                if (s.st) {\n                    dpss.push(s);\n                }\n            }\n            return calScore(node, dpss);\n        }\n        return {};\n    }\n    function calScore(node, dpss) {\n        let { width, height, left, top, bottom, right } = node.getBoundingClientRect();\n        let f = 1;\n        if (WH < top || WW < left) {\n            // 不在可视viewport中\n            f = 0;\n        }\n        let sdp = 0;\n        dpss.forEach(item => {\n            sdp += item.st;\n        });\n        let weight = TAG_WEIGHT_MAP[node.tagName] || 1;\n        if (weight === 1 &&\n            getStyle(node, 'background-image') &&\n            getStyle(node, 'background-image') !== 'initial' &&\n            getStyle(node, 'background-image') !== 'none') {\n            weight = TAG_WEIGHT_MAP['IMG']; // 将有图片背景的普通元素 权重设置为img\n        }\n        let st = width * height * weight * f;\n        let els = [{ node, st, weight }];\n        let areaPercent = calAreaPercent(node);\n        if (sdp > st * areaPercent || areaPercent === 0) {\n            st = sdp;\n            els = [];\n            dpss.forEach(item => {\n                els = els.concat(item.els);\n            });\n        }\n        return {\n            dpss,\n            st,\n            els\n        };\n    }\n    function calAreaPercent(node) {\n        let { left, right, top, bottom, width, height } = node.getBoundingClientRect();\n        let wl = 0;\n        let wt = 0;\n        let wr = WW;\n        let wb = WH;\n        let overlapX = right - left + (wr - wl) - (Math.max(right, wr) - Math.min(left, wl));\n        if (overlapX <= 0) {\n            // x 轴无交点\n            return 0;\n        }\n        let overlapY = bottom - top + (wb - wt) - (Math.max(bottom, wb) - Math.min(top, wt));\n        if (overlapY <= 0) {\n            return 0;\n        }\n        return (overlapX * overlapY) / (width * height);\n    }\n    function initResourceMap() {\n        self.performance.getEntries().forEach((item) => {\n            mp[item.name] = item.responseEnd;\n        });\n    }\n    function filterTheResultSet(els) {\n        let sum = 0;\n        els.forEach(item => {\n            sum += item.st;\n        });\n        let avg = sum / els.length;\n        return els.filter(item => {\n            return item.st >= avg;\n        });\n    }\n    function calResult(resultSet) {\n        let result = null;\n        let rt = 0;\n        resultSet.forEach(item => {\n            let t = 0;\n            if (item.weight === 1) {\n                let index = +item.node.getAttribute('mr_c') - 1;\n                t = endpoints[index].timestamp;\n            }\n            else if (item.weight === 2) {\n                if (item.node.tagName === 'IMG') {\n                    t = mp[item.node.src];\n                }\n                else if (item.node.tagName === 'SVG') {\n                    let index = +item.node.getAttribute('mr_c') - 1;\n                    t = endpoints[index].timestamp;\n                }\n                else {\n                    // background image\n                    let match = getStyle(item.node, 'background-image').match(/url\\(\\\"(.*?)\\\"\\)/);\n                    let s;\n                    if (match && match[1]) {\n                        s = match[1];\n                    }\n                    if (s.indexOf('http') == -1) {\n                        s = location.protocol + match[1];\n                    }\n                    t = mp[s];\n                }\n            }\n            else if (item.weight === 4) {\n                if (item.node.tagName === 'CANVAS') {\n                    let index = +item.node.getAttribute('mr_c') - 1;\n                    t = endpoints[index].timestamp;\n                }\n                else if (item.node.tagName === 'VIDEO') {\n                    t = mp[item.node.src];\n                    !t && (t = mp[item.node.poster]);\n                }\n            }\n            rt < t && (rt = t, result = item);\n        });\n        options = {\n            element: result.node,\n            id: result.node.id || '',\n            renderTime: rt,\n            size: result.st,\n            startTime: endpoints[+result.node.getAttribute('mr_c') - 1].timestamp,\n            url: result.node.src || ''\n        };\n        return options;\n    }\n    function disable() {\n        clearTimeout(timerId);\n        scheduleTimerTasks = false;\n        unregisterListeners();\n    }\n    function unregisterListeners() {\n        if (mutationObserver)\n            mutationObserver.disconnect();\n    }\n    return new Promise((resolve, reject) => {\n        LCPResolver = resolve;\n        if (document.readyState === 'complete') {\n            scheduleTimerTasks = true;\n            rescheduleTimer();\n        }\n        else {\n            document.addEventListener('readystatechange', () => {\n                if (document.readyState === 'complete') {\n                    scheduleTimerTasks = true;\n                    rescheduleTimer();\n                }\n            }, true);\n        }\n    });\n};\nclass LargestContentfulPaint {\n    constructor(options) {\n        this.duration = 0;\n        this.entryType = 'largest-contentful-paint';\n        this.id = '';\n        this.loadTime = 0;\n        this.name = '';\n        this.renderTime = 0;\n        this.size = 0;\n        this.startTime = 0;\n        this.url = '';\n        this.element = options.element;\n        this.id = options.id;\n        this.loadTime = options.loadTime || 0;\n        this.renderTime = options.renderTime;\n        this.startTime = options.startTime;\n        this.url = options.url || '';\n    }\n    toJSON() {\n        return JSON.stringify(this);\n    }\n}\nexport default LargestContentfulPaint;\n//# sourceMappingURL=largest-contentful-paint.js.map","import TaskQueue from './task-queue';\nimport EntryList from './entry-list';\nimport { ifSupported } from './utils';\nimport { observe as PaintObserve } from './timing/paint';\nimport { observe as LCPObserve } from './timing/largest-contentful-paint';\nconst globalTaskQueue = new TaskQueue();\nclass SplitTime {\n    constructor(callback) {\n        this.entryTypes = [];\n        this.unsupportedEntryTypes = [];\n        this.callback = callback;\n        this.buffer = new Set();\n        this.taskQueue = globalTaskQueue;\n        this.useNative = false;\n    }\n    observe(options) {\n        // TODO: 参数校验\n        // TODO: 支持 entryTypes & type\n        // TODO: 支持 bufferd\n        const { entryTypes } = options;\n        let supportedOptionsEntryTypes = [];\n        this.entryTypes = entryTypes;\n        this.unsupportedEntryTypes = entryTypes;\n        if (ifSupported) {\n            const { supportedEntryTypes } = PerformanceObserver;\n            const supportedEntryTypesSet = new Set(supportedEntryTypes);\n            supportedOptionsEntryTypes = entryTypes.filter((entryType) => supportedEntryTypesSet.has(entryType));\n            this.unsupportedEntryTypes = entryTypes.filter((entryType) => !supportedEntryTypesSet.has(entryType));\n            if (supportedOptionsEntryTypes.length) {\n                this.useNative = true;\n                new PerformanceObserver((list, observer) => {\n                    this.processEntries(list);\n                })\n                    .observe({ entryTypes: supportedOptionsEntryTypes });\n            }\n        }\n        if (this.unsupportedEntryTypes.length) {\n            this.unsupportedEntryTypes.forEach((entryType) => {\n                switch (entryType) {\n                    case 'paint':\n                        PaintObserve()\n                            .then((entries) => {\n                            this.taskQueue.performanceEntries = new Set([...this.taskQueue.performanceEntries, ...entries]);\n                        });\n                        break;\n                    case 'largest-contentful-paint':\n                        LCPObserve()\n                            .then((entries) => {\n                            this.taskQueue.performanceEntries = new Set([...this.taskQueue.performanceEntries, ...entries]);\n                        });\n                }\n            });\n            this.taskQueue.add(this);\n        }\n    }\n    disconnect() {\n        this.taskQueue.remove(this);\n    }\n    takeRecords() {\n        const entries = Array.from(this.buffer);\n        return new EntryList(entries);\n    }\n    processEntries(list) {\n        this.useNative = true;\n        const entries = Array.from(this.buffer);\n        const nativeEntries = (list && list.getEntries()) || [];\n        // Combine entries from native & SplitTime\n        const entryList = new EntryList([...entries, ...nativeEntries]);\n        this.buffer.clear();\n        this.callback(entryList, this);\n        // if native callback isn't called for a long time & buffer is still not empty, call split-time process method\n        self.setTimeout(() => {\n            this.useNative = false;\n        }, 1000);\n    }\n}\nSplitTime.supportedEntryTypes = [];\nexport default SplitTime;\n//# sourceMappingURL=observer.js.map","import SplitTime from './observer';\nexport default SplitTime;\n//# sourceMappingURL=index.js.map"],"names":["observe","PaintObserve","LCPObserve"],"mappings":"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"}